{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/Study/ead/servicex/client/src/components/pages/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Marker from \"./Marker\";\nimport './Map.css';\nimport fetchFakeData from '../../api/fetchFakeData';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1Ijoia2FrYXNoaTI1MTAiLCJhIjoiY2ttb2xld2NxMGkzdzJwbGhpcXNkMmptMiJ9.--t9iJ_IT1Vz6XLBnNcVhA';\n\nconst Map = () => {\n  _s();\n\n  const mapContainerRef = useRef(null); // initialize map when component mounts\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-104.9876, 39.7405],\n      zoom: 12.5\n    });\n    map.on('load', () => {\n      // add the data source for new a feature collection with no features\n      map.addSource('random-points-data', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: []\n        }\n      }); // now add the layer, and reference the data source above by name\n\n      map.addLayer({\n        id: 'random-points-layer',\n        source: 'random-points-data',\n        type: 'symbol',\n        layout: {\n          // full list of icons here: https://labs.mapbox.com/maki-icons\n          'icon-image': 'bakery-15',\n          // this will put little croissants on our map\n          'icon-padding': 0,\n          'icon-allow-overlap': true\n        }\n      });\n    });\n    map.on('moveend', async () => {\n      // get new center coordinates\n      const {\n        lng,\n        lat\n      } = map.getCenter(); // fetch new data\n\n      const results = await fetchFakeData(lng, lat); // update \"random-points-data\" source with new data\n      // all layers that consume the \"random-points-data\" data source will be updated automatically\n\n      map.getSource('random-points-data').setData(results);\n    }); // add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right'); // clean up on unmount\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    ref: mapContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/venkatesh/Study/ead/servicex/client/src/components/pages/Map.js"],"names":["React","useRef","useEffect","mapboxgl","Marker","fetchFakeData","ReactDOM","accessToken","Map","mapContainerRef","map","container","current","style","center","zoom","on","addSource","type","data","features","addLayer","id","source","layout","lng","lat","getCenter","results","getSource","setData","addControl","NavigationControl","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACAH,QAAQ,CAACI,WAAT,GAAuB,gGAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,eAAe,GAAGR,MAAM,CAAC,IAAD,CAA9B,CADgB,CAGhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,GAAG,GAAG,IAAIP,QAAQ,CAACK,GAAb,CAAiB;AAC3BG,MAAAA,SAAS,EAAEF,eAAe,CAACG,OADA;AAE3B;AACAC,MAAAA,KAAK,EAAE,oCAHoB;AAI3BC,MAAAA,MAAM,EAAE,CAAC,CAAC,QAAF,EAAY,OAAZ,CAJmB;AAK3BC,MAAAA,IAAI,EAAE;AALqB,KAAjB,CAAZ;AAQAL,IAAAA,GAAG,CAACM,EAAJ,CAAO,MAAP,EAAe,MAAM;AACjB;AACAN,MAAAA,GAAG,CAACO,SAAJ,CAAc,oBAAd,EAAoC;AAClCC,QAAAA,IAAI,EAAE,SAD4B;AAElCC,QAAAA,IAAI,EAAE;AACJD,UAAAA,IAAI,EAAE,mBADF;AAEJE,UAAAA,QAAQ,EAAE;AAFN;AAF4B,OAApC,EAFiB,CASjB;;AACAV,MAAAA,GAAG,CAACW,QAAJ,CAAa;AACXC,QAAAA,EAAE,EAAE,qBADO;AAEXC,QAAAA,MAAM,EAAE,oBAFG;AAGXL,QAAAA,IAAI,EAAE,QAHK;AAIXM,QAAAA,MAAM,EAAE;AACN;AACA,wBAAc,WAFR;AAEqB;AAC3B,0BAAgB,CAHV;AAIN,gCAAsB;AAJhB;AAJG,OAAb;AAWD,KArBH;AAsBEd,IAAAA,GAAG,CAACM,EAAJ,CAAO,SAAP,EAAkB,YAAY;AAC5B;AACA,YAAM;AAAES,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAehB,GAAG,CAACiB,SAAJ,EAArB,CAF4B,CAG5B;;AACA,YAAMC,OAAO,GAAG,MAAMvB,aAAa,CAACoB,GAAD,EAAMC,GAAN,CAAnC,CAJ4B,CAK5B;AACA;;AACAhB,MAAAA,GAAG,CAACmB,SAAJ,CAAc,oBAAd,EAAoCC,OAApC,CAA4CF,OAA5C;AACD,KARD,EA/BY,CAwCd;;AACAlB,IAAAA,GAAG,CAACqB,UAAJ,CAAe,IAAI5B,QAAQ,CAAC6B,iBAAb,EAAf,EAAiD,cAAjD,EAzCc,CA2Cd;;AACA,WAAO,MAAMtB,GAAG,CAACuB,MAAJ,EAAb;AACD,GA7CQ,EA6CN,EA7CM,CAAT,CAJgB,CAiDR;;AAER,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAExB;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApDD;;GAAMD,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Marker from \"./Marker\"\nimport './Map.css';\nimport fetchFakeData from '../../api/fetchFakeData'\nimport ReactDOM from 'react-dom';\nmapboxgl.accessToken = 'pk.eyJ1Ijoia2FrYXNoaTI1MTAiLCJhIjoiY2ttb2xld2NxMGkzdzJwbGhpcXNkMmptMiJ9.--t9iJ_IT1Vz6XLBnNcVhA';\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n\n  // initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-104.9876, 39.7405],\n      zoom: 12.5,\n      \n    });\n    map.on('load', () => {\n        // add the data source for new a feature collection with no features\n        map.addSource('random-points-data', {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: [],\n          },\n        });\n        // now add the layer, and reference the data source above by name\n        map.addLayer({\n          id: 'random-points-layer',\n          source: 'random-points-data',\n          type: 'symbol',\n          layout: {\n            // full list of icons here: https://labs.mapbox.com/maki-icons\n            'icon-image': 'bakery-15', // this will put little croissants on our map\n            'icon-padding': 0,\n            'icon-allow-overlap': true,\n          },\n        });\n      });\n      map.on('moveend', async () => {\n        // get new center coordinates\n        const { lng, lat } = map.getCenter();\n        // fetch new data\n        const results = await fetchFakeData(lng, lat);\n        // update \"random-points-data\" source with new data\n        // all layers that consume the \"random-points-data\" data source will be updated automatically\n        map.getSource('random-points-data').setData(results);\n      });\n    // add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n\n    // clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div className=\"map-container\" ref={mapContainerRef} />;\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}