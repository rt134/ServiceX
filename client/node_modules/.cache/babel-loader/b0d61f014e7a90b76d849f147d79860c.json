{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/Study/ead/servicex/client/src/components/pages/Map.js\";\nimport React from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'; // import '../App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapMarkers = (userData, setSelectedAppointments, setPopupState) => {\n  const nurses = mapNurses(userData.nurses, setSelectedAppointments, setPopupState) || [];\n  const patients = mapPatients(userData.patients, setSelectedAppointments, setPopupState) || [];\n  return nurses.concat(patients) || null;\n};\n\nconst handleClick = (user, setSelectedAppointments, setPopupState) => {\n  setSelectedAppointments(user.id);\n  setPopupState(user); // put appt data into state to be displayed on popup's window\n}; // const mapNurses = (nurses, setSelectedAppointments, setPopupState) => {\n// } looks like mapPatients below...\n\n\nconst mapPatients = (patients, setSelectedAppointments, setPopupState) => {\n  if (patients) {\n    return patients.map(patient => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        latitude: patient.latitude,\n        longitude: patient.longitude,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"marker-btn\",\n          onClick: () => handleClick(patient, setSelectedAppointments, setPopupState),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"patient-pin.png\",\n            alt: \"patient-pin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, patient.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    });\n  }\n};\n\nconst renderPopup = (stateObj, setPopupState, updateRenderedItem) => {\n  return stateObj && /*#__PURE__*/_jsxDEV(Popup, {\n    className: \"popup\",\n    tipSize: 5,\n    anchor: \"top\",\n    longitude: stateObj.longitude // click on marker feeds lat/long to state which is passed\n    ,\n    latitude: stateObj.latitude // here as prop so popup shows up near the selected marker pin\n    ,\n    closeOnClick: false,\n    onClose: () => setPopupState(null),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: stateObj.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 35\n      }, this), stateObj.address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateRenderedItem('apptDetails'); // change from map view to appt view\n\n          setPopupState(null); // reset state which effectively closes popup\n        },\n        children: \"Appt Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\nconst MapContainer = props => {\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, { ...props.viewport,\n    mapboxApiAccessToken: props.mapboxApiAccessToken,\n    mapStyle: \"mapbox://styles/rpdecks/ckbczsigy1q5m1ilf2qhgsphi\" // lots of map styles available, or customize your own\n    ,\n    onViewportChange: props.handleViewportChange // allows to drag map inside grid\n    ,\n    children: [props.userData.user_type !== 'patient' && mapMarkers(props.userData, props.setSelectedAppointments, props.setPopupState), renderPopup(props.popupState, props.setPopupState, props.updateRenderedItem)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/home/venkatesh/Study/ead/servicex/client/src/components/pages/Map.js"],"names":["React","ReactMapGL","Marker","Popup","mapMarkers","userData","setSelectedAppointments","setPopupState","nurses","mapNurses","patients","mapPatients","concat","handleClick","user","id","map","patient","latitude","longitude","address","renderPopup","stateObj","updateRenderedItem","name","MapContainer","props","viewport","mapboxApiAccessToken","handleViewportChange","user_type","popupState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\n// import '../App.css';\n\nconst mapMarkers = (userData, setSelectedAppointments, setPopupState) => {\n  const nurses = mapNurses(userData.nurses, setSelectedAppointments, setPopupState) || [];\n  const patients = mapPatients(userData.patients, setSelectedAppointments, setPopupState) || [];\n  return nurses.concat(patients) || null;\n}\n\nconst handleClick = (user, setSelectedAppointments, setPopupState) => {\n  setSelectedAppointments(user.id)\n  setPopupState(user) // put appt data into state to be displayed on popup's window\n}\n\n// const mapNurses = (nurses, setSelectedAppointments, setPopupState) => {\n// } looks like mapPatients below...\n\nconst mapPatients = (patients, setSelectedAppointments, setPopupState) => {\n  if (patients) {\n    return patients.map(patient => {\n      return <Marker\n        key={patient.address}\n        latitude={patient.latitude}\n        longitude={patient.longitude}\n      >\n        <button className='marker-btn' onClick={() => handleClick(patient, setSelectedAppointments, setPopupState)}>\n          {/* get your own images to style your pins. nurses style != patient style */}\n          <img src='patient-pin.png' alt='patient-pin' />\n        </button>\n      </Marker>\n    })\n  }\n}\n\nconst renderPopup = (stateObj, setPopupState, updateRenderedItem) => {\n\n  return (\n    stateObj && (\n      <Popup\n        className=\"popup\"\n        tipSize={5}\n        anchor=\"top\"\n        longitude={stateObj.longitude} // click on marker feeds lat/long to state which is passed\n        latitude={stateObj.latitude} // here as prop so popup shows up near the selected marker pin\n        closeOnClick={false}\n        onClose={() => setPopupState(null)}\n      >\n        <div>\n          <b>{ stateObj.name }</b><br />\n          { stateObj.address }<br />\n          <button onClick={() => {\n            updateRenderedItem('apptDetails') // change from map view to appt view\n            setPopupState(null) // reset state which effectively closes popup\n          }}>\n            Appt Details\n          </button >\n        </div>\n      </Popup>\n    )\n  );\n}\n\nconst MapContainer = props => {\n  return <ReactMapGL\n    {...props.viewport}\n    mapboxApiAccessToken={props.mapboxApiAccessToken}\n    mapStyle='mapbox://styles/rpdecks/ckbczsigy1q5m1ilf2qhgsphi' // lots of map styles available, or customize your own\n    onViewportChange={props.handleViewportChange} // allows to drag map inside grid\n  >\n    {props.userData.user_type !== 'patient' && mapMarkers(props.userData, props.setSelectedAppointments, props.setPopupState)}\n    {/* this renders the marker popup based on popupState which is set by clicking on a marker. If you click, it pops up. If you close, state is wiped. */}\n    {renderPopup(props.popupState, props.setPopupState, props.updateRenderedItem)}\n  </ReactMapGL>\n}\n\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}