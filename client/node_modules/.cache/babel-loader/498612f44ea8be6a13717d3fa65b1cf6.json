{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/Study/ead/servicex/client/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(undefined);\n\n  async function getLoggedIn() {\n    const loggedInRes = await get(\"http://localhost:1337/auth/\");\n    setLoggedIn(loggedInRes.data);\n  }\n\n  useEffect(() => {\n    getLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedIn,\n      getLoggedIn\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"81emVA+KGXopSnfrhBepOR4HVzY=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/venkatesh/Study/ead/servicex/client/src/context/AuthContext.js"],"names":["React","createContext","AuthContext","AuthContextProvider","props","loggedIn","setLoggedIn","useState","undefined","getLoggedIn","loggedInRes","get","data","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;;AAEA,SAASE,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAACC,SAAD,CAAxC;;AACA,iBAAeC,WAAf,GAA4B;AACxB,UAAMC,WAAW,GAAG,MAAMC,GAAG,CAAC,6BAAD,CAA7B;AACAL,IAAAA,WAAW,CAACI,WAAW,CAACE,IAAb,CAAX;AACH;;AACDC,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACJ,MAAAA,QAAD;AAAWI,MAAAA;AAAX;AAA7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAdQN,mB;;KAAAA,mB;AAgBT,eAAeD,WAAf;AACA,SAAQC,mBAAR","sourcesContent":["import React, { createContext } from 'react'\n\nconst AuthContext = createContext();\n\nfunction AuthContextProvider(props) {\n    const [loggedIn, setLoggedIn] = useState(undefined)\n    async function getLoggedIn(){\n        const loggedInRes = await get(\"http://localhost:1337/auth/\")\n        setLoggedIn(loggedInRes.data)\n    }\n    useEffect(() => {\n        getLoggedIn()\n    }, [])\n    return (\n        <AuthContext.Provider value={{loggedIn, getLoggedIn}}>\n\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext\nexport {AuthContextProvider}\n"]},"metadata":{},"sourceType":"module"}